Characteristics of Distributed File System
------------------------------------------
1. DFS allows the sharing to users on different machines connected by a communication network.
2. DFS are implemented using client-server model. ( Server stores the files and Client access it through the network )
3. Network Tranparency - clients should be able to access remote files using the same operation that apply to local files
4. Location Transparency - The name of a file should not reveal its location in the network.
5. Location Idendendence - The name of the file should not change when its physical location changes.
6. User Mobility - User can access shared files from any node in the network.
7. Fault Tolerance - Should work after server or client failures.
8. Scalability - Scale well as its load increases.

Design Considerations
---------------------
1. Name space.
2. Stateful or stateless operations
3. Semantics of sharing.
4. Remote access methods.

NETWORK FILE SYSTEM
-------------------
NFS architecture is based on CLIENT - SERVER  model. 

                 <--COMMUNICATES USING synchronous RPC-->
CLIENT  <------------------------------------------------>  SERVER

FIGURE - 1

SERVER  export either a) Entire disk partition  OR
                      b) Subtree of it.
The exported information is specified in /etc/exports  i.e which client can access each exported file system and access permission.   

CLIENT can mount the exported file system on to their local directory. 

NFS support two types of mount - 
soft - client gives up after sometime and returns error.
hard - client keep retrying the request util a reply is received.
                      


NFS Filesystem Model
--------------------
Filesystem and Filesystem objects
---------------------------------
NFS File attribute - fsid: Uniquely identifies file system on the server.
                     fileid: identifies file or directories within that file system.
so fsid/fileid pair are unique for each file on a particular server.

Filesystem objects:             NFS calls
-------------------             ---------  
Files                     
Directories                     READDIR, READDIRPLUS to read list of file names from directories.
Symbolic links
Special files

Hard link - allows single file to have multiple names
Soft link - contains a path that references another file or directory.

NFS filehandle - a) it is reference to file or directory that is independent of the file name. All NFS operations use filehandle to identify 
                 the file or directory to which the operation applies.
                 b) Filehandle is opeque to the client.
                 c) Server creates the file handles and only server can interpret the data contained in the file handle.
                 d) NFS v2 - 32 bytes long and NFSv3 - 64 byte variable length.
                 
NFS LOOKUP operation evaluates only one path component at a time, why?
Reasons:
a) Pathname syntax - different OS have different syntax.
b) Client namespace - filesystem mountpointon the client can be detected and crossed.
c) Caching and latency - Most UNIX clients use a directory name lookup cache ( DNLC ) to cache previous pathname evaluations.

Stateless Server
a) Server Recovery
b) Idempotent operations
c) Statelessness and High Availaility
