Chapter 2
---------
Values and Types
----------------
Values can be - letters ( individula letters or combination of letters) or numbers ( int, float .. etc )

program using these maniupates them like

1 + 1 = 2

we can know type of these values using 'type' keyword. example

>>> type(4) 
<type, 'int'>

>>> type("Hello")
<type, 'str'>

>>> type(2.3)
<type, float>

Strings can be enclosed using sigle quote ( 'hello' ), double quote ("hello") or sometimes '''<text>''' quotes

just using values does not make sense, since we can not hardcode the values. Vaulues can change, due to this we need to use 
variables.

Variable
--------
Variable is a name that refers to a values.

Rules to name a Variable
------------------------
1. Variable names can be arbitrarily long. 
2. They can contain both letters and numbers, but they have to begin with a letter. 
3. Remember that case matters. Bruce and bruce are diï¬€erent variables.
4. The underscore character can appear in a name. It is often used in names with multiple words, such as my_name or price_of_tea_in_china.
5. If you give a variable an illegal name, you get a syntax error:

Statements
----------
A statement is an instruction that the Python interpreter can execute. We have seen two kinds of statements: print and assignment.
We know python script, it contains sequence of statements so python will interpret and executes.

Example
-------
# vi prints.sh   // Enter below statements in the prints.sh file
print 1 
x = 2 
print x

# python prints.sh	// Execute the script
1
2

Evaluating the Expression
-------------------------
An expression is a combination of values, variables, and operators. 
If you type an expression on the command line, the interpreter evaluates it and displays the result:
>>> 1 + 1 
2

Note, a value all by itself is considered an expression, and so is a variable.
>>> 17
17
